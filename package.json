{
	"name": "databricks-run",
	"displayName": "Databricks Run",
	"publisher": "bernhardwalter",
	"description": "Commands to send code to Databricks cluster",
	"version": "0.9.5",
	"repository": "https://github.com/bernhard-42/databricks-run",
	"engines": {
		"vscode": ">=1.48.2"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:databricks-run.initialize"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [{
				"command": "databricks-run.initialize",
				"title": "Databricks Run: Initialize a Databricks Connection"
			},
			{
				"command": "databricks-run.sendSelectionOrBlock",
				"title": "Databricks Run: Send selection or block between #--"
			},
			{
				"command": "databricks-run.sendLine",
				"title": "Databricks Run: Send current line"
			},
			{
				"command": "databricks-run.cancel",
				"title": "Databricks Run: Cancel the currently running command"
			},
			{
				"command": "databricks-run.stop",
				"title": "Databricks Run: Stop the Databricks Connection"
			},
			{
				"command": "databricks-run.refresh-libraries",
				"title": "Refresh Remote Libraries",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.install-library",
				"title": "Install libraries locally",
				"icon": {
					"light": "resources/install.png",
					"dark": "resources/install.png"
				}
			},
			{
				"command": "databricks-run.create-env-file",
				"title": "Create Environment File",
				"icon": {
					"light": "resources/open.png",
					"dark": "resources/open.png"
				}
			},
			{
				"command": "databricks-run.refresh-variables",
				"title": "Refresh Remote Variables",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.paste-from-dataframe",
				"title": "Paste colum of dataframe",
				"icon": {
					"light": "resources/light/paste.png",
					"dark": "resources/dark/paste.png"
				}
			},
			{
				"command": "databricks-run.refresh-mlflow",
				"title": "Refresh Remote Experiments",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.open-experiment",
				"title": "Open experiment in browser",
				"icon": {
					"light": "resources/open.png",
					"dark": "resources/open.png"
				}
			},
			{
				"command": "databricks-run.open-model",
				"title": "Open model in browser",
				"icon": {
					"light": "resources/open.png",
					"dark": "resources/open.png"
				}
			}, {
				"command": "databricks-run.refresh-secrets",
				"title": "Refresh Remote Secrets",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.paste-from-secrets",
				"title": "Paste dbutils command for secret",
				"icon": {
					"light": "resources/light/paste.png",
					"dark": "resources/dark/paste.png"
				}
			},
			{
				"command": "databricks-run.refresh-cluster-attributes",
				"title": "Refresh Remote Cluster Attributes",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.start-cluster",
				"title": "Start Remote Cluster",
				"icon": {
					"light": "resources/start.png",
					"dark": "resources/start.png"
				}
			},
			{
				"command": "databricks-run.restart-cluster",
				"title": "Restart Remote Cluster",
				"icon": {
					"light": "resources/restart.png",
					"dark": "resources/restart.png"
				}
			},
			{
				"command": "databricks-run.open-sparkui",
				"title": "Open Spark UI",
				"icon": {
					"light": "resources/open.png",
					"dark": "resources/open.png"
				}
			},
			{
				"command": "databricks-run.stop-cluster",
				"title": "Stop Remote Cluster",
				"icon": {
					"light": "resources/stop.png",
					"dark": "resources/stop.png"
				}
			},
			{
				"command": "databricks-run.refresh-databases",
				"title": "Refresh Remote Databases",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.paste-from-database",
				"title": "Paste database/table/colum name of database",
				"icon": {
					"light": "resources/light/paste.png",
					"dark": "resources/dark/paste.png"
				}
			},
			{
				"command": "databricks-run.refresh-contexts",
				"title": "Refresh Contexts",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "databricks-run.select-context",
				"title": "Open file for context Contexts",
				"icon": {
					"light": "resources/open.png",
					"dark": "resources/open.png"
				}
			}
		],
		"keybindings": [{
				"command": "databricks-run.sendLine",
				"key": "ctrl+k shift+enter",
				"mac": "cmd+k shift+enter",
				"when": "editorTextFocus"
			}, {
				"command": "databricks-run.sendSelectionOrBlock",
				"key": "ctrl+k ctrl+enter",
				"mac": "cmd+k ctrl+enter",
				"when": "editorTextFocus"
			},
			{
				"command": "databricks-run.initialize",
				"key": "ctrl+k shift+i",
				"mac": "cmd+k shift+i",
				"when": "editorTextFocus"
			},
			{
				"command": "databricks-run.stop",
				"key": "ctrl+k shift+s",
				"mac": "cmd+k shift+s",
				"when": "editorTextFocus"
			},
			{
				"command": "databricks-run.cancel",
				"key": "ctrl+k shift+c",
				"mac": "cmd+k shift+c",
				"when": "editorTextFocus"
			}
		],
		"configuration": {
			"title": "Databricks Run",
			"properties": {
				"DatabricksRun.maxArrayElements": {
					"type": "integer",
					"default": 10,
					"description": "Maximum number of list elements shown in variable explorer"
				},
				"DatabricksRun.maxStringLength": {
					"type": "integer",
					"default": 100,
					"description": "Maximum length of stings shown in variable explorer"
				},
				"DatabricksRun.remoteUser": {
					"type": "string",
					"default": "",
					"description": "Remote Databricks username"
				}
			}
		},
		"taskDefinitions": [{
			"type": "Databricks Run",
			"required": [
				"action"
			],
			"properties": {
				"action": {
					"type": "string",
					"description": "The build task. This can be 'upload-wheel' and 'restart'."
				}
			}
		}],
		"viewsContainers": {
			"activitybar": [{
				"id": "databricksExplorer",
				"title": "Databricks",
				"icon": "resources/databricks-run.png"
			}]
		},
		"views": {
			"databricksExplorer": [{
					"id": "databricksContextExplorer",
					"name": "Contexts"
				},
				{
					"id": "databricksVariableExplorer",
					"name": "Python Variables"
				},
				{
					"id": "databricksMlflowExplorer",
					"name": "MLflow"
				},
				{
					"id": "databricksLibraryExplorer",
					"name": "Python Libraries"
				},
				{
					"id": "databricksDatabaseExplorer",
					"name": "Databases"
				},
				{
					"id": "databricksSecretsExplorer",
					"name": "Secrets"
				},
				{
					"id": "databricksClusterExplorer",
					"name": "Cluster"
				}
			]
		},
		"menus": {
			"view/title": [{
					"command": "databricks-run.refresh-libraries",
					"when": "view == databricksLibraryExplorer",
					"group": "navigation@1"
				},
				{
					"command": "databricks-run.create-env-file",
					"when": "view == databricksLibraryExplorer",
					"group": "navigation@0"
				},
				{
					"command": "databricks-run.refresh-variables",
					"when": "view == databricksVariableExplorer",
					"group": "navigation"
				},
				{
					"command": "databricks-run.refresh-mlflow",
					"when": "view == databricksMlflowExplorer",
					"group": "navigation"
				},
				{
					"command": "databricks-run.refresh-databases",
					"when": "view == databricksDatabaseExplorer",
					"group": "navigation"
				},
				{
					"command": "databricks-run.refresh-secrets",
					"when": "view == databricksSecretsExplorer",
					"group": "navigation"
				},
				{
					"command": "databricks-run.refresh-cluster-attributes",
					"when": "view == databricksClusterExplorer",
					"group": "navigation@3"
				},
				{
					"command": "databricks-run.refresh-contexts",
					"when": "view == databricksContextExplorer",
					"group": "navigation"
				}
			],
			"view/item/context": [{
					"command": "databricks-run.install-library",
					"when": "view == databricksLibraryExplorer && viewItem == library",
					"group": "inline"
				},
				{
					"command": "databricks-run.paste-from-dataframe",
					"when": "view == databricksVariableExplorer && viewItem == dataframe",
					"group": "inline"
				},
				{
					"command": "databricks-run.open-experiment",
					"when": "view == databricksMlflowExplorer && viewItem == experiment",
					"group": "inline"
				},
				{
					"command": "databricks-run.open-model",
					"when": "view == databricksMlflowExplorer && viewItem == model",
					"group": "inline"
				},
				{
					"command": "databricks-run.paste-from-database",
					"when": "view == databricksDatabaseExplorer",
					"group": "inline"
				},
				{
					"command": "databricks-run.select-context",
					"when": "view == databricksContextExplorer && viewItem == context",
					"group": "inline"
				},
				{
					"command": "databricks-run.paste-from-secrets",
					"when": "view == databricksSecretsExplorer && viewItem == secret",
					"group": "inline"
				},
				{
					"command": "databricks-run.start-cluster",
					"when": "view == databricksClusterExplorer && viewItem == cluster",
					"group": "inline@0"
				},
				{
					"command": "databricks-run.stop-cluster",
					"when": "view == databricksClusterExplorer && viewItem == cluster",
					"group": "inline@2"
				},
				{
					"command": "databricks-run.restart-cluster",
					"when": "view == databricksClusterExplorer && viewItem == cluster",
					"group": "inline@1"
				},
				{
					"command": "databricks-run.open-sparkui",
					"when": "view == databricksClusterExplorer && viewItem == cluster",
					"group": "inline@3"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/ini": "^1.3.30",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.13.15",
		"@types/vscode": "^1.48.0",
		"@typescript-eslint/eslint-plugin": "^2.34.0",
		"@typescript-eslint/parser": "^2.34.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.2.0",
		"typescript": "^3.9.7",
		"vsce": "^1.79.5",
		"vscode-test": "^1.4.0"
	},
	"dependencies": {
		"@types/archiver": "^3.1.0",
		"@types/cli-table": "^0.3.0",
		"@types/decomment": "^0.9.0",
		"@types/uuid": "^8.3.0",
		"archiver": "^5.0.0",
		"axios": "^0.21.1",
		"cli-table": "^0.3.1",
		"decomment": "^0.9.3",
		"ini": "^1.3.5",
		"tsc": "^1.20150623.0",
		"username": "^5.1.0",
		"uuid": "^8.3.0"
	}
}